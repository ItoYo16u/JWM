<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Development on</title><link>https://doks-child-theme.netlify.app/docs/development/</link><description>Recent content in Development on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Tue, 06 Oct 2020 08:48:45 +0000</lastBuildDate><atom:link href="https://doks-child-theme.netlify.app/docs/development/index.xml" rel="self" type="application/rss+xml"/><item><title>Convensions</title><link>https://doks-child-theme.netlify.app/docs/development/convensions/</link><pubDate>Tue, 13 Oct 2020 15:21:01 +0200</pubDate><guid>https://doks-child-theme.netlify.app/docs/development/convensions/</guid><description>General naming conventions camelCase in Java &amp;amp; C++. UPPER_CASE for enum values. Field/method prefixes: _n... for native methods. _... for “private” fields. get.../is... for getters. set.../with... for setters. make... for static named constructors. _FLAG_&amp;lt;TYPE&amp;gt;_&amp;lt;NAME&amp;gt; for bit flags. ...Mask for bit masks. Getter methods ALWAYS start with get... / is... (lineNumber -&amp;gt; getLineNumber(), accessible -&amp;gt; isAccessible()). Constructors/static builders ALWAYS start with make.... Setters/updaters must return this. Class names use &amp;lt;Generic&amp;gt;-&amp;lt;Specific&amp;gt; pattern (EventKey, not KeyEvent, WindowMac, not MacWindow).</description></item><item><title>Run Example Applcation</title><link>https://doks-child-theme.netlify.app/docs/development/run-example-app/</link><pubDate>Tue, 06 Oct 2020 08:49:31 +0000</pubDate><guid>https://doks-child-theme.netlify.app/docs/development/run-example-app/</guid><description>Prerequisites First of all, download and install these dependencies below.
Shared: Git, CMake(3.11+), Ninja, C++ compiler, JDK 11+, $JAVA_HOME, Python 3 Windows 10: Microsoft Visual C++ (MSVC), x64 Native Tools Command Prompt for VS. Ubuntu 20.04: libxcomposite-dev libxrandr-dev libgl1-mesa-dev libxi-dev libxcursor-dev Clone repository git clone git@github.com:humbleui/jwm.git cd jwm Run dashboard example app without building: ./script/run.py --jwm-version &amp;lt;version&amp;gt; Or build from source and run ./script/run.py Run native-image example app: todo other commands build from source .</description></item><item><title>Setup Guide on Windows</title><link>https://doks-child-theme.netlify.app/docs/development/setup-win/</link><pubDate>Tue, 06 Oct 2020 08:49:31 +0000</pubDate><guid>https://doks-child-theme.netlify.app/docs/development/setup-win/</guid><description>Install Python 3 from windows power shell
winget install Python.Python.3 or from chocolatey
choco install -y python python --version Install Ninja Download executable from https://github.com/ninja-build/ninja/releases and export path.
Install visual studio build tools Run this command in windows power shell.
winget install Microsoft.VisualStudio.2019.BuildTools Then, run C:\Program Files (x86)\Microsoft Visual Studio\Installer\setup.exe and install c++ development tools.
After reboot, open one of the command prompts for VS 2019 matching your arch.
Usually, you can open command prompt for VS from C:\path\to\Start Menu\Programs\Visual Studio 2019\Visual Studio Tools\VC.</description></item></channel></rss>